import com.android.build.gradle.internal.dsl.SigningConfig

apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "gzfns.com.inventoryregulation"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            debuggable true
            //实现自动签名
            signingConfig getSignInfo("../config/releasesign.properties")

            buildConfigField "String", "BASE_URL", "\"https://icmdve.gzfns.com/icm/gateway/\""
            buildConfigField "String", "BASE_SERVER", "\"\""
            buildConfigField "String", "APP_NAME", "\"车库监管测试\""
            buildConfigField "String", "BASE_H5_URL", "\"https://www.baidu.com/\""
            resValue "string", "app_name", "\"车库监管测试\""
        }
        release {
            minifyEnabled false
            shrinkResources false
            signingConfig getSignInfo("../config/releasesign.properties")
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "BASE_URL", "\"https://icmdve.gzfns.com/icm/gateway/\""
            buildConfigField "String", "BASE_SERVER", "\"\""
            buildConfigField "String", "APP_NAME", "\"车库监管\""
            buildConfigField "String", "BASE_H5_URL", "\"https://www.baidu.com/\""
            resValue "string", "app_name", "\"车库监管\""
        }
    }

}

def getSignInfo(propFileName) {
    def SigningConfig signingConfig = new SigningConfig("signInfo")
    File propFile = file(propFileName)
    if (propFile.exists()) {
        def Properties props = new Properties()
        props.load(new FileInputStream(propFile))
        signingConfig.storeFile = file(props['STORE_FILE'])
        signingConfig.storePassword = props['STORE_PASSWORD']
        signingConfig.keyAlias = props['KEY_ALIAS']
        signingConfig.keyPassword = props['KEY_PASSWORD']
        println('signConfig is exits')
    } else {
        println('sign config is null')
        signingConfig = null
    }
    return signingConfig
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    testImplementation 'junit:junit:4.12'
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation 'com.github.bumptech.glide:glide:4.7.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1'
    implementation 'com.google.code.gson:gson:2.8.5'
    // retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    // okhttp interceptor
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    // retrofit converters
    implementation 'com.squareup.retrofit2:converter-gson:2.0.1'
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.3'
    // multidex
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.readystatesoftware.systembartint:systembartint:1.0.3'
    //implementation 'pub.devrel:easypermissions:1.2.0'
    compile 'com.github.lypeer:FcPermissions:v0.0.1'
    implementation 'com.android.support:cardview-v7:27.1.1'
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    //recycleview适配器
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.30'

    compile 'me.zhouzhuo.zzimagebox:zz-image-box:1.0.6'

    compile files('libs/android-logging-log4j-1.0.3.jar')
    compile files('libs/log4j-1.2.17.jar')
}
